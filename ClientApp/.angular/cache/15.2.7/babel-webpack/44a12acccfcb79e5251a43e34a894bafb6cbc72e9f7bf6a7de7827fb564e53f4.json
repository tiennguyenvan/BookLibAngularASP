{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/book.service\";\nconst _c0 = function (a1) {\n  return [\"/show-book/\", a1];\n};\nexport class UpdateBookComponent {\n  constructor(formBuilder,\n  // inject form builder\n  route,\n  // inject ActivatedRoute\n  service,\n  // inject BookService\n  router // inject RouterService\n  ) {\n    this.formBuilder = formBuilder;\n    this.route = route;\n    this.service = service;\n    this.router = router;\n    this.bookId = 0;\n  }\n  ngOnInit() {\n    bookId = parseInt(this.route.snapshot.paramMap.get('id'));\n    this.editBookForm = this.formBuilder.group({\n      id: [null],\n      title: [null],\n      author: [null],\n      description: [null],\n      rate: [null],\n      dateStart: [null],\n      dateRead: [null]\n    });\n    this.service.getBookById(bookId).subscribe(book => {\n      this.editBookForm = this.formBuilder.group({\n        id: [book.id],\n        title: [book.title],\n        author: [book.author],\n        description: [book.description],\n        rate: [book.rate],\n        dateStart: [book.dateStart],\n        dateRead: [book.dateRead]\n      });\n    });\n  }\n  onSubmit() {\n    if (this.editBookForm.valid) {\n      const bookId = parseInt(this.route.snapshot.paramMap.get('id'));\n      this.service.updateBook(this.editBookForm.value).subscribe(() => {\n        this.router.navigate(['/book', bookId]);\n      });\n    }\n  }\n}\nUpdateBookComponent.ɵfac = function UpdateBookComponent_Factory(t) {\n  return new (t || UpdateBookComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.BookService), i0.ɵɵdirectiveInject(i2.Router));\n};\nUpdateBookComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: UpdateBookComponent,\n  selectors: [[\"app-update-book\"]],\n  decls: 30,\n  vars: 4,\n  consts: [[3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"required\", \"\", \"formControlName\", \"title\", 1, \"form-control\"], [\"for\", \"author\"], [\"type\", \"text\", \"id\", \"author\", \"required\", \"\", \"formControlName\", \"author\", 1, \"form-control\"], [\"for\", \"description\"], [\"id\", \"description\", \"rows\", \"3\", \"required\", \"\", \"formControlName\", \"description\", 1, \"form-control\"], [1, \"row\"], [1, \"col-md-4\", \"col-xs-4\", \"col-sm-4\"], [\"for\", \"rate\"], [\"type\", \"number\", \"id\", \"rate\", \"min\", \"1\", \"max\", \"10\", \"formControlName\", \"rate\", 1, \"form-control\"], [\"for\", \"dateStart\"], [\"type\", \"date\", \"id\", \"dateStart\", \"formControlName\", \"dateStart\", 1, \"form-control\"], [\"for\", \"dateRead\"], [\"type\", \"date\", \"id\", \"dateRead\", \"formControlName\", \"dateRead\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"], [1, \"cancel\", 3, \"routerLink\"]],\n  template: function UpdateBookComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function UpdateBookComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"label\", 2);\n      i0.ɵɵtext(3, \"Title:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"div\", 1)(6, \"label\", 4);\n      i0.ɵɵtext(7, \"Author:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"div\", 1)(10, \"label\", 6);\n      i0.ɵɵtext(11, \"Description:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"textarea\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 8)(14, \"div\", 9)(15, \"label\", 10);\n      i0.ɵɵtext(16, \"Rating:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"div\", 9)(19, \"label\", 12);\n      i0.ɵɵtext(20, \"Start date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(21, \"input\", 13);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"div\", 9)(23, \"label\", 14);\n      i0.ɵɵtext(24, \"Read date:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(25, \"input\", 15);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(26, \"button\", 16);\n      i0.ɵɵtext(27, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"button\", 17);\n      i0.ɵɵtext(29, \"Show\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"formGroup\", ctx.editBookForm);\n      i0.ɵɵadvance(28);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(2, _c0, ctx.bookId));\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MinValidator, i1.MaxValidator, i1.FormGroupDirective, i1.FormControlName, i2.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["UpdateBookComponent","constructor","formBuilder","route","service","router","ngOnInit","bookId","parseInt","snapshot","paramMap","get","editBookForm","group","id","title","author","description","rate","dateStart","dateRead","getBookById","subscribe","book","onSubmit","valid","updateBook","value","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/sneeit/Documents/ASP.NET/BookLibAngularASP/ClientApp/src/app/components/update-book/update-book.component.ts","/Users/sneeit/Documents/ASP.NET/BookLibAngularASP/ClientApp/src/app/components/update-book/update-book.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { BookService } from 'src/app/services/book.service';\n\n@Component({\n\tselector: 'app-update-book',\n\ttemplateUrl: './update-book.component.html',\n\tstyleUrls: ['./update-book.component.css']\n})\nexport class UpdateBookComponent implements OnInit {\n\teditBookForm!: FormGroup;\n\tbookId: number = 0;\n\tconstructor(\n\t\tprivate formBuilder: FormBuilder,  // inject form builder\n\t\tprivate route: ActivatedRoute,  // inject ActivatedRoute\n\t\tprivate service: BookService,  // inject BookService\n\t\tprivate router: Router  // inject RouterService\n\t) {\n\t}\n\n\tngOnInit(): void {\n\t\tbookId = parseInt(this.route.snapshot.paramMap.get('id')!);\n\t\tthis.editBookForm = this.formBuilder.group({\n\t\t\tid: [null],\n\t\t\ttitle: [null],\n\t\t\tauthor: [null],\n\t\t\tdescription: [null],\n\t\t\trate: [null],\n\t\t\tdateStart: [null],\n\t\t\tdateRead: [null]\n\t\t})\n\t\tthis.service.getBookById(bookId).subscribe(book => {\n\t\t\tthis.editBookForm = this.formBuilder.group({\n\t\t\t\tid: [book.id],\n\t\t\t\ttitle: [book.title],\n\t\t\t\tauthor: [book.author],\n\t\t\t\tdescription: [book.description],\n\t\t\t\trate: [book.rate],\n\t\t\t\tdateStart: [book.dateStart],\n\t\t\t\tdateRead: [book.dateRead]\n\t\t\t})\n\t\t})\n\t}\n\n\tonSubmit() {\n\t\tif (this.editBookForm.valid) {\n\t\t\tconst bookId = parseInt(this.route.snapshot.paramMap.get('id')!);\n\t\t\tthis.service.updateBook(this.editBookForm.value).subscribe(() => {\n\t\t\t\tthis.router.navigate(['/book', bookId]);\n\t\t\t});\n\t\t}\n\n\t}\n\n}\n","\n<form [formGroup]=\"editBookForm\" (ngSubmit)=\"onSubmit()\">\n\t<div class=\"form-group\">\n\t\t<label for=\"title\">Title:</label>\n\t\t<input type=\"text\" class=\"form-control\" id=\"title\" required formControlName=\"title\">\n\t</div>\n\t<div class=\"form-group\">\n\t\t<label for=\"author\">Author:</label>\n\t\t<input type=\"text\" class=\"form-control\" id=\"author\" required\n\t\tformControlName=\"author\"\n\t\t>\n\t</div>\n\t<div class=\"form-group\">\n\t\t<label for=\"description\">Description:</label>\n\t\t<textarea class=\"form-control\" id=\"description\" rows=\"3\" required\n\t\tformControlName=\"description\"\n\t\t></textarea>\n\t</div>\n\t<div class=\"row\">\n\t\t<div class=\"col-md-4 col-xs-4 col-sm-4\">\n\t\t\t<label for=\"rate\">Rating:</label>\n\t\t\t<input type=\"number\" class=\"form-control\" id=\"rate\" min=\"1\" max=\"10\"\n\t\t\tformControlName=\"rate\"\n\n\t\t\t>\n\t\t</div>\n\t\t<div class=\"col-md-4 col-xs-4 col-sm-4\">\n\t\t\t<label for=\"dateStart\">Start date:</label>\n\t\t\t<input type=\"date\" class=\"form-control\" id=\"dateStart\"\n\t\t\tformControlName=\"dateStart\"\n\t\t\t>\n\t\t</div>\n\t\t<div class=\"col-md-4 col-xs-4 col-sm-4\">\n\t\t\t<label for=\"dateRead\">Read date:</label>\n\t\t\t<input type=\"date\" class=\"form-control\" id=\"dateRead\"\n\t\t\tformControlName=\"dateRead\"\n\t\t\t>\n\t\t</div>\n\t</div>\n\t<button type=\"submit\" class=\"btn btn-primary\">Submit</button>\t\n\t<button class=\"cancel\" [routerLink]=\"['/show-book/', bookId]\">Show</button>\n</form>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}